# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: Run performance test on a Kubernetes cluster

on:
  workflow_dispatch:
    inputs:
      registry:
        default: ""
        description: "Registry to store images,e.g., docker.io, default is empty"
        required: false
        type: string
      tag:
        default: "rc0.9"
        description: "Tag to apply to images"
        required: true
        type: string
      opea_branch:
        default: "rc0.9"
        description: "Branch to build images"
        required: true
        type: string
      runner:
        description: "Runner label"
        required: true
        type: string

jobs:
  setup-stress:
    runs-on: "${{ inputs.runner }}"
    steps:
      - name: Clean Up Working Directory
        run: sudo rm -rf ${{github.workspace}}/*

      - name: Checkout out GenAIEval
        uses: actions/checkout@v4
        with:
          path: Validation

      - name: Checkout out GenAIEval
        uses: actions/checkout@v4
        with:
          repository: opea-project/GenAIEval
          path: GenAIEval

      - name: Set up stress tool
        run: |
          cd GenAIEval
          python3 -m venv stress_venv
          source stress_venv/bin/activate
          pip install -r requirements.txt

      - name: Checkout out GenAIExamples
        uses: actions/checkout@v4
        with:
          repository: opea-project/GenAIExamples
          ref: ${{ inputs.opea_branch }}
          path: GenAIExamples

  run-benchmark:
    runs-on: "${{ inputs.runner }}"
    strategy:
      matrix:
        node_num: ["1"]
    steps:
      - name: Prepare benchmark configuration
        working-directory: GenAIEval
        run: |
          .github/scripts/perf_test.sh generate_config ${{ matrix.node_num }}
          echo "uncordon=false" >> $GITHUB_ENV
          echo "uninstall=false" >> $GITHUB_ENV

      - name: K8s cordon
        run: |
          echo "uncordon=true" >> $GITHUB_ENV
          .github/scripts/perf_test.sh cordon ${{ matrix.node_num }}

      - name: Install Workload
        working-directory: Validation
        env:
          IMAGE_REPO: ${{ inputs.registry }}
          IMAGE_TAG: ${{ inputs.tag }}
          HF_TOKEN: ${{ secrets.HUGGINGFACEHUB_API_TOKEN }}
          LLM_MODEL_ID: "Intel/neural-chat-7b-v3-3"
          EMBEDDING_MODEL_ID: "BAAI/bge-base-en-v1.5"
          RERANK_MODEL_ID: "BAAI/bge-reranker-base"
        run: |
          echo "uninstall=true" >> $GITHUB_ENV
          .github/scripts/perf_test.sh installChatQnA ${{ matrix.node_num }} ../GenAIExamples

      - name: Stress Test
        working-directory: GenAIEval/evals/benchmark
        run: |
          source stress_venv/bin/activate
          python benchmark.py

      - name: Uninstall Workload
        if: ${{ fromJSON(env.uninstall) }}
        working-directory: Validation
        run: |
          .github/scripts/perf_test.sh uninstallChatQnA ${{ matrix.node_num }} ../GenAIExamples

      - name: K8s uncordon
        if: ${{ fromJSON(env.uncordon) }}
        working-directory: Validation
        run: |
          .github/scripts/perf_test.sh uncordon
      